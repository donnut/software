
The mechanisms of the Translation Project
-----------------------------------------

This README briefly describes how things are set up on the server of the
Translation Project.


Website
-------

To make the server produce the static and dynamic web pages, Apache is
configured in /etc/apache2/sites-available/www.translationproject.org
like this:

    <VirtualHost *>
        DocumentRoot /home/translation/site
        ServerName translationproject.org
        ServerAlias *.translationproject.org
        ScriptAlias /cgi//registry.cgi /home/tp/site/cgi/registry.cgi
    </VirtualHost>

The ScriptAlias allows the execution of the registry.cgi script. This script
produces the dynamic pages that contain information about a domain or a team.
Meanwhile these pages have been replaced with static pages that get remade
only when actually something on them changes.

The static documentation pages are produced by running 'make site' in the
~/progs directory; the source for these pages is located in ~/progs/webgen.


PO statistics
-------------

The file ~/cache/postats contains most of the data needed to produce the
domain and team pages.  This postats file gets updated by 'po-register'
whenver a POT or PO file is added or updated.


The robot
---------

The user 'tp', that receives all mail sent to <*@translationproject.org>, has
the following entry in its '.procmailrc' file:

    # Ignore the To line, just look for "TP-robot" at the
    # start of the Subject line, as an anti-spam measure.
    :0:
    * ^Subject: *[Tt][Pp][-_ ][Rr]obot
    bot-queue

This rule filters all mail that is meant for the robot to the 'bot-queue'
mailbox.  To handle the queue, the 'tp' user has this 'crontab' entry:

    0-50/10 * * * *	/bin/sh /home/tp/progs/bin/run-queue.sh

This runs 'run-queue.sh' every ten minutes.  That script is what actually
launches the robot for each received file.  The robot extracts the PO file
from the email, runs several checks on the file, and sends a report back
to the submitter.  If the PO file is good, it hands it to 'po-register',
which adds the file to the archives, adds a symlink to it in the latest/
subdir when appropriate, calls 'calc-postats' to calculate the statistics
for the file and put these in ~/cache/postats, regenerates the affected
team and domain pages, and sends out an email to mailing list of the
corresponding language team, and also to the maintainer (but only when
the submission was for the most recent POT file).


[It might be possible to handle mail immediately upon receipt,
if things are locked correctly.]
[Maybe the robot also needs to be prevented form running when an admin
is busy editing registry.sgml or anything else in /home/tp?]


Adding a new POT file
---------------------

When package maintainers submit the URL of a new version of their package,
a TP admin cd's to progs/registry, edits the registry.sgml file to update
the <url> field of that package, runs 'make' in that dir (to create a digest
of the registry in ~/cache/), and then runs 'fetch-pot $DOMAIN'.  If that
succeeds, which it normally should, she runs 'po-register $DOMAIN-$VERSION.pot'
-- this runs 'msgmerge' with the new POT on the most recent PO file for each
language, sends out notifications of the newly created PO files to the teams
and to the last translators, and sends a confirmation to the maintainer.


Changing translator details
---------------------------

When a translator takes on a new package, or a new translator has joined a
team, a TP admin cd's to progs/registry and edits registry.sgml, to add or
change the required tags.  After that she runs 'make' in that directory to
update the registry digest in ~/cache/, and runs 'generate-static-pages'
with the teamcode as an argument to update the team page.


If anything is missing from this file, please report it to
<comments@tranlationproject.org>.
